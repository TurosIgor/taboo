apiVersion: v1
kind: ConfigMap
metadata:
  name: mongo-init-config
data:
  init.sh: |
    #!/bin/bash -eux
    mongod --bind_ip_all --replSet rs0 &

    until mongosh --eval "print(\"MongoDB is up\")" > /dev/null 2>&1; do
      echo "Waiting for MongoDB to start..."
      sleep 2
    done

    if [ "$(hostname)" == "mongo-0" ]; then
      echo "Initializing replica set..."
      mongosh --eval "
        rs.initiate({
          _id: 'rs0',
          members: [
            { _id: 0, host: 'mongo-0.mongo-svc.taboo.svc.cluster.local:27017', priority: 2 },
            { _id: 1, host: 'mongo-1.mongo-svc.taboo.svc.cluster.local:27017', priority: 1 },
            { _id: 2, host: 'mongo-2.mongo-svc.taboo.svc.cluster.local:27017', priority: 1 }
          ]
        })
      "
      
    else
      echo "Waiting for primary to initialize replica set..."
      until mongosh --host mongo-0.mongo-svc.taboo.svc.cluster.local:27017 --eval "rs.status()" > /dev/null 2>&1; do
        echo "Waiting for replica set to be initialized..."
        sleep 2
      done
    fi
    
    while true; do
      PRIMARY_STATUS=$(mongosh --eval "rs.status().members.forEach(m => { if (m.self) print(m.stateStr); })" | grep "PRIMARY" || true)
      
      if [ "$PRIMARY_STATUS" == "PRIMARY" ]; then
        echo "This pod is primary, proceeding with data import..."
        
        mongoimport --uri="mongodb://localhost:27017/tabooDB" --collection words --file /docker-entrypoint-initdb.d/taboo.json --jsonArray
        
        break
      fi

      echo "Waiting for this pod to become primary..."
      sleep 5
    done      

    rm -f /docker-entrypoint-initdb.d/taboo.json

    wait
